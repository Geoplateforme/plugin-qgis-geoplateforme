stages:
  - 🐍 lint
  - 🤞 test
  - 📦 build
  - 🚀 deploy

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_FOLDER/.cache/pip"
  PROJECT_FOLDER: "vectiler"
  REPO_PLUGIN_URL: "https://oslandia.gitlab.io/qgis/ign-vectuileur/"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  key:
    files:
      - requirements/*.txt
  paths:
    - .cache/pip

# -- LINT JOBS -------------------------------------------------------------------------

flake8:
  stage: 🐍 lint
  image: python:3.9-slim-buster
  only:
    changes:
      - "**/*.py"
  before_script:
    - python -m pip install -U flake8
  script:
    - flake8 $PROJECT_FOLDER --count --select=E9,F63,F7,F82 --show-source --statistics
    - flake8 $PROJECT_FOLDER --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

# -- TEST JOBS --------------------------------------------------------------------------
test-unit:
  stage: 🤞 test
  image: python:3.9-slim-buster
  only:
    changes:
      - "**/*.py"
      - ".gitlab-ci.yml"
  before_script:
    - python3 -m pip install -U -r requirements/development.txt
    - python3 -m pip install -U -r requirements/testing.txt
  script:
    - env PYTHONPATH=/usr/share/qgis/python:. pytest -p no:qgis tests/unit
  artifacts:
    when: always
    reports:
      junit: junit/test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-qgis:
  stage: 🤞 test
  image: qgis/qgis:release-3_22
  only:
    changes:
      - "**/*.py"
      - ".gitlab-ci.yml"
    refs:
      - master
  before_script:
    - python3 -m pip install -U -r requirements/testing.txt
  script:
    - env PYTHONPATH=/usr/share/qgis/python:. pytest tests/qgis
  artifacts:
    when: always
    reports:
      junit: junit/test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# -- BUILD JOBS -------------------------------------------------------------------------
build:translation:
  stage: 📦 build
  image: python:3.9-slim-buster
  only:
    refs:
      - master
      - tags
  before_script:
    - apt update
    - apt install -y qttools5-dev-tools qt5-default g++
  script:
    - lupdate -noobsolete -verbose $PROJECT_FOLDER/resources/i18n/plugin_translation.pro
    - lrelease $PROJECT_FOLDER/resources/i18n/*.ts
  artifacts:
    name: ui-translation
    paths:
      - $PROJECT_FOLDER/resources/i18n/*qm
    when: always

builder:
  stage: 📦 build
  image: python:3.9
  only:
    refs:
      - master
      - tags
  needs:
    - build:translation
  before_script:
    - apt install git
    - python -m pip install -U -r requirements/packaging.txt
  script:
      # Amend gitignore to include embedded libs with qgis-plugin-ci
    - sed -i "s|^*.qm.*| |" .gitignore

    # Package the latest version listed in the changelog
    - qgis-plugin-ci package latest --plugin-repo-url $REPO_PLUGIN_URL
    - qgis-plugin-ci changelog latest >> release.md
  artifacts:
    name: "$PROJECT_FOLDER_b$CI_COMMIT_REF_NAME-c$CI_COMMIT_SHORT_SHA-j$CI_JOB_ID"
    paths:
      - "${PROJECT_FOLDER}.*.zip"
      - plugins.xml
      - release.md
    expire_in: never

documentation:
  stage: 📦 build
  image: python:3.9-slim-buster
  only:
    refs:
      - master
  before_script:
    - python -m pip install -U -r requirements/documentation.txt
  script:
    - sphinx-build -b html docs target/docs
  artifacts:
    name: documentation
    expose_as: "Built documentation static website"
    paths:
      - target/docs
    when: always

# -- DEPLOYMENT JOBS -------------------------------------------------------------------
pages:
  stage: 🚀 deploy
  variables:
    GIT_STRATEGY: none
  only:
    changes:
      - "**/*.md"
      - "**/*.rst"
      - ".gitlab-ci.yml"
      - "$PROJECT_FOLDER/**/*"
      - requirements/documentation.txt
      - requirements/packaging.txt
    refs:
      - master
  needs:
    - builder
    - documentation
  script:
    - mkdir -p public
    # copy generated plugin
    - cp ${PROJECT_FOLDER}.*.zip public/
    - cp plugins.xml public/
    # copy HTML documentation
    - cp -rf target/docs/* public/
  artifacts:
    paths:
      - public
    when: always

release-from-tag:
  stage: 🚀 deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    GIT_STRATEGY: none
  only:
    - tags
  needs:
    - job: builder
      artifacts: true
  script:
    - echo "Creating release from $CI_COMMIT_TAG"
    - $description=$(<release.md)
  release:
    name: "$CI_COMMIT_TAG"
    description: "Version $CI_COMMIT_TAG\n\n$description\n\n> Created using the GitLab release-cli during the job $CI_JOB_ID."
    tag_name: $CI_COMMIT_TAG
    assets:
      links:
        - name: "Packaged plugin"
          url: "https://gitlab.com/Oslandia/qgis/ign-vectuileur/-/jobs/${ARTIFACT_JOB_ID}/artifacts/download?job=builder"

# deploy-to-qgis-repository:
#   stage: 🚀 deploy
#   image: python:3.9
#   only:
#     - tags
#   before_script:
#     - apt install git
#     - python -m pip install -U -r requirements/packaging.txt
#   script:
#     - echo "Deploying the version ${CI_COMMIT_TAG} plugin to QGIS Plugins Repository with the user ${OSGEO_USER_NAME}"
#     - python ${PROJECT_FOLDER}/__about__.py
#     - qgis-plugin-ci release ${CI_COMMIT_TAG}
#       --osgeo-username $OSGEO_USER_NAME
#       --osgeo-password $OSGEO_USER_PASSWORD
